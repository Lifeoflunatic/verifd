plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

// Read release tag from Gradle property or environment variable
def relTag = (project.findProperty("releaseTag") ?: System.getenv("RELEASE_TAG")) ?: ""
def isReleaseBuild = gradle.startParameter.taskNames.join(' ').contains("assemble") || gradle.startParameter.taskNames.join(' ').contains("bundle")

android {
    namespace 'com.verifd.android'
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.verifd.android"
        minSdk 26
        targetSdk 34
        // Use date-based versionCode: YYYYMMDDHH (fits 32-bit)
        versionCode Integer.parseInt(new Date().format("yyyyMMddHH"))
        // Pin versionName to release tag (strip 'v' prefix if present)
        versionName relTag?.startsWith("v") ? relTag.substring(1) : (relTag ?: "1.0-dev")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {
            // Explicitly no versionNameSuffix - controlled by releaseTag
            versionNameSuffix ""
            buildConfigField "String", "BASE_URL", "\"http://10.0.2.2:3000\""  // Android emulator localhost
            buildConfigField "String", "BUILD_VARIANT", "\"debug\""
        }
        staging {
            initWith debug
            applicationIdSuffix ".staging"
            // Explicitly no versionNameSuffix - controlled by releaseTag
            versionNameSuffix ""
            resValue "string", "app_name", "verifd Staging"
            buildConfigField "String", "BASE_URL", "\"https://staging.api.verifd.com\""
            buildConfigField "String", "BUILD_VARIANT", "\"staging\""
            buildConfigField "boolean", "IS_STAGING", "true"
        }
        release {
            // Explicitly no versionNameSuffix - controlled by releaseTag
            versionNameSuffix ""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://api.verifd.com\""
            buildConfigField "String", "BUILD_VARIANT", "\"release\""
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

// Enforce release tag for release builds
if (isReleaseBuild && relTag.trim().isEmpty()) {
    throw new GradleException("Missing releaseTag/RELEASE_TAG for release build. Pass -PreleaseTag=<tag> or set RELEASE_TAG environment variable")
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    
    // Architecture Components
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    
    // Room
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'
    
    // Work Manager
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    
    // Preferences
    implementation 'androidx.preference:preference-ktx:1.2.1'
    
    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.1.0'
    testImplementation 'org.robolectric:robolectric:4.11.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.room:room-testing:2.6.1'
}