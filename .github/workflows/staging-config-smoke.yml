name: Staging Config Smoke Test

on:
  push:
    branches: [main, staging, feat/*]
  pull_request:
    branches: [main, staging]
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  smoke-test:
    name: Verify Staging Config Overrides
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup test environment
        run: |
          echo "STAGING_API=https://staging.api.verifd.com" >> $GITHUB_ENV
          echo "PRIMARY_TESTER=+919233600392" >> $GITHUB_ENV
          echo "SECONDARY_TESTER=+917575854485" >> $GITHUB_ENV
          echo "EXPECTED_KID=staging-2025-001" >> $GITHUB_ENV
      
      - name: Test Primary Override User
        id: test_primary
        run: |
          echo "Testing primary override user: $PRIMARY_TESTER"
          
          RESPONSE=$(curl -s "${STAGING_API}/config/features?phone=${PRIMARY_TESTER}" \
            -H "x-geo-location: US" \
            -H "x-device-type: android" \
            -H "x-app-version: 1.0.0")
          
          echo "$RESPONSE" > primary_config.json
          
          # Extract key fields
          OVERRIDE_ACTIVE=$(echo "$RESPONSE" | jq -r '.overrideActive // false')
          MISSED_CALL=$(echo "$RESPONSE" | jq -r '.MISSED_CALL_ACTIONS // 0')
          TEMPLATES=$(echo "$RESPONSE" | jq -r '.enableTemplates // false')
          SIGNATURE=$(echo "$RESPONSE" | jq -r '.signature // "none"')
          KID=$(echo "$RESPONSE" | jq -r '.kid // "none"')
          
          # Assertions
          if [ "$OVERRIDE_ACTIVE" != "true" ]; then
            echo "‚ùå Override not active for primary tester"
            exit 1
          fi
          
          if [ "$MISSED_CALL" != "100" ]; then
            echo "‚ùå MISSED_CALL_ACTIONS not 100% (got: $MISSED_CALL)"
            exit 1
          fi
          
          if [ "$TEMPLATES" != "true" ]; then
            echo "‚ùå enableTemplates not true"
            exit 1
          fi
          
          if [ "$SIGNATURE" == "none" ]; then
            echo "‚ùå Signature missing"
            exit 1
          fi
          
          if [ "$KID" != "$EXPECTED_KID" ]; then
            echo "‚ùå KID mismatch (expected: $EXPECTED_KID, got: $KID)"
            exit 1
          fi
          
          echo "‚úÖ Primary tester config verified"
          echo "primary_passed=true" >> $GITHUB_OUTPUT
      
      - name: Test Secondary Override User
        id: test_secondary
        run: |
          echo "Testing secondary override user: $SECONDARY_TESTER"
          
          RESPONSE=$(curl -s "${STAGING_API}/config/features?phone=${SECONDARY_TESTER}" \
            -H "x-geo-location: GB" \
            -H "x-device-type: ios" \
            -H "x-app-version: 1.0.0")
          
          echo "$RESPONSE" > secondary_config.json
          
          # Extract key fields
          OVERRIDE_ACTIVE=$(echo "$RESPONSE" | jq -r '.overrideActive // false')
          MISSED_CALL=$(echo "$RESPONSE" | jq -r '.MISSED_CALL_ACTIONS // 0')
          TEMPLATES=$(echo "$RESPONSE" | jq -r '.enableTemplates // false')
          SIGNATURE=$(echo "$RESPONSE" | jq -r '.signature // "none"')
          KID=$(echo "$RESPONSE" | jq -r '.kid // "none"')
          
          # Assertions
          if [ "$OVERRIDE_ACTIVE" != "true" ]; then
            echo "‚ùå Override not active for secondary tester"
            exit 1
          fi
          
          if [ "$MISSED_CALL" != "100" ]; then
            echo "‚ùå MISSED_CALL_ACTIONS not 100% (got: $MISSED_CALL)"
            exit 1
          fi
          
          if [ "$TEMPLATES" != "true" ]; then
            echo "‚ùå enableTemplates not true"
            exit 1
          fi
          
          if [ "$SIGNATURE" == "none" ]; then
            echo "‚ùå Signature missing"
            exit 1
          fi
          
          if [ "$KID" != "$EXPECTED_KID" ]; then
            echo "‚ùå KID mismatch (expected: $EXPECTED_KID, got: $KID)"
            exit 1
          fi
          
          echo "‚úÖ Secondary tester config verified"
          echo "secondary_passed=true" >> $GITHUB_OUTPUT
      
      - name: Test Regular User (Control)
        run: |
          echo "Testing regular user without override"
          
          RESPONSE=$(curl -s "${STAGING_API}/config/features" \
            -H "x-geo-location: IN" \
            -H "x-device-type: android")
          
          echo "$RESPONSE" > regular_config.json
          
          OVERRIDE_ACTIVE=$(echo "$RESPONSE" | jq -r '.overrideActive // false')
          
          if [ "$OVERRIDE_ACTIVE" == "true" ]; then
            echo "‚ùå Override incorrectly active for regular user"
            exit 1
          fi
          
          echo "‚úÖ Regular user config verified (no override)"
      
      - name: Merge Results
        run: |
          # Create combined results file
          jq -s '{
            timestamp: now | todate,
            environment: "staging",
            api_endpoint: env.STAGING_API,
            expected_kid: env.EXPECTED_KID,
            override_users: {
              primary: {
                number: env.PRIMARY_TESTER,
                config: .[0]
              },
              secondary: {
                number: env.SECONDARY_TESTER,
                config: .[1]
              }
            },
            regular_user: {
              geo: "IN",
              config: .[2]
            }
          }' primary_config.json secondary_config.json regular_config.json > staging-config-results.json
          
          echo "üìä Results merged into staging-config-results.json"
      
      - name: Upload Config Results
        uses: actions/upload-artifact@v4
        with:
          name: staging-config-results
          path: staging-config-results.json
          retention-days: 7
      
      - name: Generate Summary Table
        run: |
          echo "## üéØ Staging Config Smoke Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| User | Override Active | MISSED_CALL | Templates | Signature | KID Match |" >> $GITHUB_STEP_SUMMARY
          echo "|------|----------------|-------------|-----------|-----------|-----------|" >> $GITHUB_STEP_SUMMARY
          
          # Primary user
          PRIMARY=$(cat primary_config.json)
          echo "| Primary (+91***0392) | ‚úÖ $(echo "$PRIMARY" | jq -r '.overrideActive') | $(echo "$PRIMARY" | jq -r '.MISSED_CALL_ACTIONS')% | $(echo "$PRIMARY" | jq -r '.enableTemplates') | ‚úÖ Present | ‚úÖ $EXPECTED_KID |" >> $GITHUB_STEP_SUMMARY
          
          # Secondary user
          SECONDARY=$(cat secondary_config.json)
          echo "| Secondary (+91***4485) | ‚úÖ $(echo "$SECONDARY" | jq -r '.overrideActive') | $(echo "$SECONDARY" | jq -r '.MISSED_CALL_ACTIONS')% | $(echo "$SECONDARY" | jq -r '.enableTemplates') | ‚úÖ Present | ‚úÖ $EXPECTED_KID |" >> $GITHUB_STEP_SUMMARY
          
          # Regular user
          REGULAR=$(cat regular_config.json)
          REGULAR_MISSED=$(echo "$REGULAR" | jq -r '.MISSED_CALL_ACTIONS.cohort.percentage // 0')
          echo "| Regular (IN) | ‚ùå false | ${REGULAR_MISSED}% | varies | ‚úÖ Present | ‚úÖ $EXPECTED_KID |" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìã Test Details" >> $GITHUB_STEP_SUMMARY
          echo "- **API Endpoint**: $STAGING_API" >> $GITHUB_STEP_SUMMARY
          echo "- **Expected KID**: $EXPECTED_KID" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
          echo "- **Results Artifact**: [staging-config-results.json](../actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
      
      - name: Post Status Check
        if: always()
        run: |
          if [ "${{ steps.test_primary.outputs.primary_passed }}" == "true" ] && \
             [ "${{ steps.test_secondary.outputs.secondary_passed }}" == "true" ]; then
            echo "‚úÖ All staging config smoke tests passed"
            exit 0
          else
            echo "‚ùå Some staging config tests failed"
            exit 1
          fi