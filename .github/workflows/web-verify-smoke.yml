name: web-verify smoke
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      BASE_URL: http://localhost:3000
      MOCK_API: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Enable pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Build shared + web-verify
        run: |
          pnpm -w --filter @verifd/shared build
          pnpm -w --filter @verifd/web-verify build
      - name: Install Playwright browsers
        run: pnpm -C apps/web-verify exec playwright install --with-deps
      - name: Choose BASE_URL (prod if secret set)
        shell: bash
        run: |
          if [ -n "${{ secrets.VERCEL_DEPLOYMENT_URL }}" ] && [ "${{ secrets.VERCEL_DEPLOYMENT_URL }}" != "vercel_deployment_url" ]; then
            URL="${{ secrets.VERCEL_DEPLOYMENT_URL }}"
            # Add https:// if no protocol specified
            if [[ ! "$URL" =~ ^https?:// ]]; then
              URL="https://$URL"
            fi
            # Validate it's not a placeholder
            if [[ "$URL" == *"vercel_deployment_url"* ]] || [[ "$URL" == *"example.com"* ]]; then
              echo "::warning::VERCEL_DEPLOYMENT_URL appears to be a placeholder. Using local server instead."
              echo "Using local server at $BASE_URL"
            else
              echo "BASE_URL=$URL" >> $GITHUB_ENV
              echo "Using prod URL: $URL"
            fi
          else
            echo "Using local server at $BASE_URL"
          fi
      - name: Start local server (only if using local BASE_URL)
        shell: bash
        run: |
          if [ "$BASE_URL" = "http://localhost:3000" ]; then
            echo "Starting local server..."
            sudo fuser -k 3000/tcp || true
            pnpm -C apps/web-verify start &
            npx --yes wait-on http-get://localhost:3000
          else
            echo "Skipping local server (using $BASE_URL)"
          fi
      - name: Run Playwright (Chromium only CI config)
        env:
          E2E_BASE_URL: ${{ env.BASE_URL }}
        run: pnpm -C apps/web-verify e2e:ci
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web-verify/playwright-report
          if-no-files-found: ignore